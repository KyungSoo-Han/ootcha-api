<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ootcha.wms.mapper.inbound.InboundMapper">

    <select id="findInboundMst" parameterType="com.ootcha.wms.dto.inbound.InboundSrchDto" resultType="com.ootcha.wms.dto.inbound.InboundDto" >
        select distinct
        a.biz_cd
        ,a.inbound_dt
        ,a.inbound_no
        ,a.inbound_req_dt
        ,a.inbound_req_no
        ,a.center_cd
        ,a.customer_cd
        ,c.customer_nm
        ,a.supplier_cd
        ,d.supplier_nm
        ,a.inbound_type
        ,a.inbound_exp_dt
        ,a.remark
        ,c.customer_cd
        ,c.customer_nm
        , case when a.status = 0 then '대기' when a.status = 1 then '반려' when a.status = 2 then '승인' end status
        from t_inbound a
            left join t_customer c on a.biz_cd = c.biz_cd and a.customer_cd = c.customer_cd
            left join t_supplier d on a.biz_cd = d.biz_cd and a.customer_cd = d.customer_cd and a.supplier_cd = d.supplier_cd
        where a.biz_cd = #{bizCd}
        and a.center_cd = #{centerCd}
        <if test='inboundFromDt != null'>
            and a.inbound_dt between #{inboundFromDt} and #{inboundToDt}
        </if>
        <if test='inboundExpFromDt != null'>
            and a.inbound_exp_dt between #{inboundExpFromDt} and #{inboundExpToDt}
        </if>
        <if test='inboundReqNo != null'>
            and a.inbound_req_no = #{inboundReqNo}
        </if>
        <if test='customerCd != null'>
            and a.customer_cd = #{customerCd}
        </if>
        <if test='supplierCd != null'>
            and a.supplier_cd = #{supplierCd}
        </if>
       <!-- <if test='status != null'>
            and a.status = #{status}
        </if>-->
    </select>


    <select id="findInboundDtl" parameterType="com.ootcha.wms.dto.inbound.InboundSrchDto" resultType="com.ootcha.wms.dto.inbound.InboundDto" >
        select
            a.biz_cd
             ,a.inbound_dt
             ,a.inbound_no
             ,a.inbound_req_dt
             ,a.inbound_req_no
             ,a.center_cd
             ,a.customer_cd
             ,c.customer_nm
             ,a.supplier_cd
             ,d.supplier_nm
             ,a.inbound_type
             ,a.inbound_exp_dt
             ,a.remark
             ,b.inbound_seq
             ,b.inbound_req_seq
             ,b.item_cd
             ,e.item_nm
             ,b.exp_dt
             ,b.make_dt
             ,b.make_lot_no
             ,b.qty
             ,b.sub_remark
             ,c.customer_cd
             ,c.customer_nm
        from t_inbound a
             left join t_inbound_item b on a.biz_cd = b.biz_cd
                                            and a.inbound_req_dt = b.inbound_req_dt
                                            and a.inbound_req_no = b.inbound_req_no
             left join t_customer c on a.biz_cd = c.biz_cd and a.customer_cd = c.customer_cd
             left join t_supplier d on a.biz_cd = d.biz_cd and a.customer_cd = d.customer_cd and a.supplier_cd = d.supplier_cd
             left join t_item e on a.biz_cd = e.biz_cd and a.customer_cd = e.customer_cd and b.item_cd = e.item_cd
        where a.biz_cd = #{bizCd}
          and a.center_cd = #{centerCd}
          and a.inbound_dt = #{inboundDt}
          and a.inbound_no = #{inboundNo}

    </select>

    <insert id="saveInbound" parameterType="map" >

        <selectKey keyProperty="inboundNo" resultType="integer" order="BEFORE">
            SELECT ifnull(MAX(inbound_no),0) +1
            FROM t_inbound
            where biz_cd = #{bizCd}
            AND inbound_dt = #{inboundDt}
        </selectKey>


        insert into t_inbound
        (
            biz_cd
            ,inbound_dt
            ,inbound_no
            ,center_cd
            ,customer_cd
            ,supplier_cd
            ,inbound_type
            ,inbound_exp_dt
            ,remark
            ,inbound_req_dt
            ,inbound_req_no
            ,created_id
            ,created_dt
        )

        values
        <foreach item="item" collection="list"  index = "i" separator=",">
            (
             #{bizCd}
            ,#{inboundDt}
            ,#{inboundNo} + #{i}
            ,#{item.centerCd}
            ,#{item.customerCd}
            ,#{item.supplierCd}
            ,#{item.inboundType}
            ,#{item.inboundExpDt}
            ,#{item.remark}
            ,#{item.inboundReqDt}
            ,#{item.inboundReqNo}
            ,#{createdId}
            ,now()
            )

        </foreach>
        ;

        <foreach item="item" collection="list"  index = "i" separator=";">
        insert into t_inbound_item
        (
         biz_cd,
         center_cd,
         inbound_dt,
         inbound_no,
         inbound_seq,
         item_cd,
         qty,
         exp_dt,
         make_lot_no,
         make_dt,
         inbound_req_dt,
         inbound_req_no,
         inbound_req_seq,
         created_id,
         created_dt
        )

        select
        a.biz_cd
        ,a.center_cd
        ,a.inbound_dt
        ,a.inbound_no
        ,b.inbound_req_seq
        ,b.item_cd
        ,b.qty
        ,b.exp_dt
        ,b.make_lot_no
        ,b.make_dt
        ,b.inbound_req_dt
        ,b.inbound_req_no
        ,b.inbound_req_seq
        ,#{createdId}
        ,now()
        from t_inbound a
        left join t_inbound_req_item b on a.biz_cd = b.biz_cd
                                            and a.inbound_req_dt = b.inbound_req_dt
                                            and a.inbound_req_no = b.inbound_req_no
        where a.biz_cd = #{bizCd}
        and a.center_cd = #{centerCd}
        and a.inbound_dt = #{inboundDt}
        and a.inbound_no = #{inboundNo} + #{i}
        ;

        update t_inbound_req
        set status = 3
        where biz_cd = #{item.bizCd}
        and center_cd = #{item.centerCd}
        and inbound_req_dt = #{item.inboundReqDt}
        and inbound_req_no = #{item.inboundReqNo}
        </foreach>
    </insert>

</mapper>

    